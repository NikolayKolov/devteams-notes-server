// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id          Int         @id     @default(autoincrement())
    email       String      @unique
    firstName   String
    lastName    String
    // The password hash + salt from bcryptjs library,
    // the salt is the first part of the string until '/' character, the hash is the second
    passSaltHash    String
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    Note        Note[]
    @@index([email])
}

model Note {
    id          Int         @id     @default(autoincrement())
    type        NoteType
    title       String
    content     String?
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    // When deleting a user, delete automatically all related notes
    owner       User        @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: NoAction )
    ownerId     Int
    listItems   NoteChecklistItems[]
}

model NoteChecklistItems {
    id          Int         @id     @default(autoincrement())
    text        String
    order       Int
    isDone      Boolean     @default(false)
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    // When deleting a note, delete automatically all related note list items
    owner       Note        @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: NoAction )
    ownerId     Int
}

enum NoteType {
    TEXT
    CHECKLIST
}